{"version":3,"sources":["MyApp.js","reportWebVitals.js","index.js"],"names":["MyApp","props","state","url","name","type","handleNameChange","bind","handleTypeChange","handleUrlChange","handleSubmit","handleFileUpload","event","this","setState","target","value","data","FormData","append","JSON","stringify","preventDefault","fetch","method","body","then","response","console","log","json","uploadInput","files","onSubmit","id","ref","htmlFor","onChange","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA8FeA,E,kDA3Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,IAAK,GACLC,KAAM,GACNC,KAAM,IAER,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBACpB,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBAXP,E,6DAcFK,GACfC,KAAKC,SAAS,CAAEV,KAAMQ,EAAMG,OAAOC,U,uCAGpBJ,GACfC,KAAKC,SAAS,CAAET,KAAMO,EAAMG,OAAOC,U,sCAGrBJ,GACdC,KAAKC,SAAS,CAAEX,IAAKS,EAAMG,OAAOC,U,mCAGvBJ,GACX,IAAIK,EAAO,IAAIC,SACfD,EAAKE,OAAQ,OAAQC,KAAKC,UAAW,CACnCjB,KAAMS,KAAKX,MAAME,KACjBC,KAAMQ,KAAKX,MAAMG,KACjBF,IAAKU,KAAKX,MAAMC,OAGlBS,EAAMU,iBACNC,MAAM,UAAW,CACfC,OAAQ,OACRC,KAAMR,IACLS,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,a,uCAIVlB,GACfA,EAAMU,iBACNM,QAAQC,IAAIjB,GACZ,IAAMK,EAAO,IAAIC,SACjBD,EAAKE,OAAO,OAAQN,KAAKkB,YAAYC,MAAM,IAE3CT,MAAM,UAAW,CACfC,OAAQ,OACRC,KAAMR,IACLS,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,a,+BAKhB,IAAD,OACR,OACE,gCACE,uBAAMG,SAAUpB,KAAKF,iBAArB,UACE,uBAAON,KAAK,OAAO6B,GAAG,SAAS9B,KAAK,SAAS+B,IAAK,SAACA,GAAU,EAAKJ,YAAcI,KAChF,wBAAQ9B,KAAK,SAAb,uBAEA,uBAAM4B,SAAUpB,KAAKH,aAArB,UACE,uBAAO0B,QAAQ,OAAf,iCACA,uBACEF,GAAG,OACH7B,KAAK,OACLgC,SAAUxB,KAAKP,mBAEjB,uBAAO8B,QAAQ,OAAf,iCACA,uBACEF,GAAG,OACH7B,KAAK,OACLgC,SAAUxB,KAAKL,mBAEjB,uBAAO4B,QAAQ,OAAf,gCACA,uBACEF,GAAG,MACH7B,KAAK,OACLgC,SAAUxB,KAAKJ,kBAEjB,wBAAQJ,KAAK,SAAb,8B,GArFQiC,aCULC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aa50d8ee.chunk.js","sourcesContent":["import React,{Component} from 'react'\n\nclass MyApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      name: '',\n      type: '',\n    };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleTypeChange = this.handleTypeChange.bind(this);\n    this.handleUrlChange = this.handleUrlChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  handleNameChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleTypeChange(event) {\n    this.setState({ type: event.target.value });\n  }\n\n  handleUrlChange(event) {\n    this.setState({ url: event.target.value });\n  }\n\n  handleSubmit(event) {\n    var data = new FormData();\n    data.append( \"json\", JSON.stringify( {\n      name: this.state.name,\n      type: this.state.type,\n      url: this.state.url\n  } ) );\n\n    event.preventDefault();\n    fetch('/submit', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n        console.log(response.json());\n      });\n  }\n\n  handleFileUpload(event){\n    event.preventDefault();\n    console.log(event)\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n\n    fetch('/upload', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n        console.log(response.json());\n      });\n  }\n\n\n   render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFileUpload}>\n          <input type=\"file\" id=\"myfile\" name=\"myfile\" ref={(ref) => { this.uploadInput = ref; }}/>\n          <button type=\"submit\">Submit</button>\n        </form>\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"name\">Enter lesson name: </label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              onChange={this.handleNameChange}\n            />\n            <label htmlFor=\"name\">Enter lesson type: </label>\n            <input\n              id=\"type\"\n              type=\"text\"\n              onChange={this.handleTypeChange}\n            />\n            <label htmlFor=\"name\">Enter lesson url: </label>\n            <input\n              id=\"url\"\n              type=\"text\"\n              onChange={this.handleUrlChange}\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n      </div>\n    );\n  }\n}\n\nexport default MyApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyApp from './MyApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}